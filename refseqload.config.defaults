#format: sh
#
#  refseqloader.config.defaults
#
#  This file sets up environment variables that are needed for the
#  RefSeq Sequence load
#
###########################################################################

###########################################################################
#
#  GENERAL SETTINGS
#
###########################################################################

#  Installation directory for the RefSeq sequence load
INSTALLDIR=/usr/local/mgi/3.0/dataload/refseqload
#INSTALLDIR=/home/sc/jsam/refseqload

#  Installation directory for the DB utilities product
DBUTILSDIR=/usr/local/mgi/3.0/dbutils/mgidbutilities
#DBUTILSDIR=/home/sc/jsam/mgidbutilities

#  Installation directory for the QC report product
QCRPTDIR=/usr/local/mgi/3.0/qcreports_db
#QCRPTDIR=/home/sc/jsam/qcreports_db

export INSTALLDIR DBUTILSDIR QCRPTDIR

###########################################################################
#
#  DATABASE SETTINGS BY DATABASE
#
###########################################################################

# MGD Connection parameters 
MGD_DBSERVER=DEV1_MGI
MGD_DBURL=rohan.informatics.jax.org:4101
MGD_DBNAME=mgd_jsamlec
#MGD_DBNAME=mgd_jsamsc
MGD_DBUSER=mgd_dbo
MGD_DBPASSWORDFILE=${DBUTILSDIR}/.mgd_dbo_password
MGD_DBSCHEMADIR=/usr/local/mgi/3.0/dbutils/mgd_jsamlec/mgddbschema
#MGD_DBSCHEMADIR=/home/sc/jsam/mgddbschema

export MGD_DBSERVER MGD_DBURL MGD_DBNAME
export MGD_DBUSER MGD_DBPASSWORDFILE MGD_DBSCHEMADIR

# RADAR Connection parameters 
RADAR_DBSERVER=DEV1_MGI
RADAR_DBURL=rohan.informatics.jax.org:4101
RADAR_DBNAME=radar_release
RADAR_DBUSER=mgd_dbo
RADAR_DBPASSWORDFILE=${DBUTILSDIR}/.mgd_dbo_password
#RADAR_DBSCHEMADIR=/home/sc/jsam/radardbschema
RADAR_DBSCHEMADIR=/usr/local/mgi/3.0/dbutils/radar_release/radardbschema

export RADAR_DBSERVER RADAR_DBURL RADAR_DBNAME RADAR_DBUSER
export RADAR_DBPASSWORDFILE RADAR_DBSCHEMADIR 

###########################################################################
#
#  SOFTWARE SETTINGS
#
###########################################################################

JAVA_HOME=/usr/j2se
JAVA_RUN=${JAVA_HOME}/bin/java

# allow 2G memory limit in initial mode
# 1.5 G in incremental mode
JAVARUNTIMEOPTS="-Xms1500m -Xmx1500m"
#JAVARUNTIMEOPTS="-Xms2G -Xmx2G"

JAVA_LIB=/usr/local/mgi/3.0/lib/java1.4/dla.jar:/usr/local/mgi/3.0/lib/java1.4/core.jar:/usr/local/mgi/3.0/lib/java1.4/dbsmgd.jar:/usr/local/mgi/3.0/lib/java1.4/dbsrdr.jar

CLASSPATH=.:${INSTALLDIR}/refseqload.jar:${JAVA_LIB}:${COMMON_CLASSPATH}

#CLASSPATH=.:/home/sc/jsam/refseqload/classes:/home/sc/jsam/lib_java_core/classes:/home/sc/jsam/lib_java_dbsmgd/classes:/home/sc/jsam/lib_java_dbsrdr/classes:/home/sc/jsam/lib_java_dla/classes:${JAVA_HOME}/jre/lib/rt.jar:/opt/sybase/12.5/jConnect-5_5/classes/jconn2.jar

DLAFUNCTIONS=${DBUTILSDIR}/bin/DLAfunctions.sh

JOBSTART_CSH=${DBUTILSDIR}/bin/startJobStream.csh
JOBEND_CSH=${DBUTILSDIR}/bin/endJobStream.csh

export JAVA_HOME JAVA_RUN JAVARUNTIMEOPTS CLASSPATH DLAFUNCTIONS
export JOBSTART_CSH JOBEND_CSH

###########################################################################
#
#  LOAD SPECIFIC SETTINGS
#
###########################################################################

#  Java applications
REFSEQLOAD_APP=org.jax.mgi.app.refseqload.RefSeqloader

#  loader shell script
REFSEQLOAD_SH=${INSTALLDIR}/bin/refseqload.sh

#  seqloader QC report shell script
# this script doesn't yet exist
REFSEQLOAD_QCRPT=${QCRPTDIR}/refseqloadRpt.sh

export REFSEQLOAD_APP REFSEQLOAD_SH REFSEQLOAD_QCRPT

#  Path name of the data, report, log and archive directories
FILEDIR=/net/mtdoom/vol/rohan/data/loads/genbank/refseqload
DATADIR=/net/hobbiton/data/downloads/ftp.ncbi.nih.gov/refseq
#DATADIR=/net/mtdoom/vol/rohan/data/downloads/ftp.ncbi.nih.gov/refseqloader

LOGDIR=${FILEDIR}/logs
RPTDIR=${FILEDIR}/reports
ARCHIVEDIR=${FILEDIR}/archive

export FILEDIR DATADIR LOGDIR RPTDIR ARCHIVEDIR

#  Complete path name of the RefSeq input file
#  frameworks expects the value 'STDIN' if jobstream script pipes input and
#  jobstream expects the variable PIPED_INFILES to be defined
INFILE_NAME=STDIN

# list of files to pipe to application
PIPED_INFILES="${DATADIR}/vertebrate*protein*gz ${DATADIR}/vertebrate*rna*gz"

# method to cat files to stdin, generally 'cat' or 'gunzip -c'
CAT_METHOD="/usr/local/bin/gunzip -c"

# RefSeq sequence record regex end delimiter
#INFILE_END_DELIMITER="^//"

# RefSeq sequence record regex start delimiter
INFILE_BEGIN_DELIMITER="^LOCUS"

# RefSeq sequence record regex end delimiter not including sequence
INFILE_END_DELIMITER="^ORIGIN"

# Note: Using string delims causes first record to be skipped if
# there is not a header
# RefSeq sequence record String start delimiter
#INFILE_BEGIN_DELIMITER=\nLOCUS

# RefSeq sequence record String end delimiter not including sequence
#INFILE_END_DELIMITER=\nORIGIN

# true = regex matching for finding record delim is turned on
INFILE_USE_REGEX=true

# buffersize in bytes used by nio.ByteBuffer
# 21,000,000 = ~20 MB
INFILE_BUFFERSIZE=21000000

# incremental, incremental_initial, or delete_reload
# incremental_initial doesn't use a MergeSplitProcessor
SEQ_LOAD_MODE=incremental_initial

# path to repeat file; file refseqload writes sequences found more than
# once in the input
SEQ_REPEAT_FILE=${FILEDIR}/data/repeats.out

export INFILE_NAME PIPED_INFILES INFILE_BEGIN_DELIMITER INFILE_END_DELIMITER 
export INFILE_USE_REGEX INFILE_BUFFERSIZE SEQ_LOAD_MODE SEQ_REPEAT_FILE

# true if a virtual (computationally derived) sequence
SEQ_VIRTUAL=false

# this load's login value for DB table CreatedBy and ModifiedBy
JOBSTREAM=refseq_load

# SEQ_Sequence Provider controlled vocab for RefSeq 
SEQ_PROVIDER=RefSeq

# logical db name for this data provider
SEQ_LOGICALDB=RefSeq

export SEQ_VIRTUAL JOBSTREAM SEQ_PROVIDER SEQ_LOGICALDB

# organisms to load
LOAD_MOUSE=true
LOAD_RAT=false
LOAD_HUMAN=false

export MOUSE RAT HUMAN

# Refseq seqid prefixes to load
NM=true
NR=true
NP=true
NC=false
NG=false
NT=false
NW=false
NZ=false
ZP=false
XM=true
XR=true
XP=true

export NM NR NP NC NG NT NW NZ ZP XM XR XP

#  Complete path name of the log files
LOG_PROC=${LOGDIR}/refseqload.proc.log
LOG_DIAG=${LOGDIR}/refseqload.diag.log
LOG_CUR=${LOGDIR}/refseqload.cur.log
LOG_VAL=${LOGDIR}/refseqload.val.log

# Send debug messages to the diagnostic log
LOG_DEBUG=true

export LOG_PROC LOG_DIAG LOG_CUR LOG_VAL LOG_DEBUG


###########################################################################
#
#  BCP MANAGER SETTINGS BY DATABASE
#
###########################################################################

#  Settings used to create a BCP manager for the MGD database
MGD_BCP_PATH=${FILEDIR}/data
MGD_BCP_PREVENT_EXECUTE=false
MGD_BCP_TRUNCATE_LOG=true
MGD_BCP_DROP_INDEXES=true
MGD_BCP_RECORD_STAMPING=false
MGD_BCP_AUTO_FLUSH=false
MGD_BCP_OK_TO_OVERWRITE=false

export MGD_BCP_PATH MGD_BCP_PREVENT_EXECUTE MGD_BCP_TRUNCATE_LOG
export MGD_BCP_DROP_INDEXES MGD_BCP_RECORD_STAMPING MGD_BCP_AUTO_FLUSH
export MGD_BCP_OK_TO_OVERWRITE

#  Settings used to create a BCP manager for the MGD database
RADAR_BCP_PATH=${FILEDIR}/data
RADAR_BCP_PREVENT_EXECUTE=false
RADAR_BCP_TRUNCATE_LOG=true
RADAR_BCP_DROP_INDEXES=true
RADAR_BCP_RECORD_STAMPING=false
RADAR_BCP_AUTO_FLUSH=false
RADAR_BCP_OK_TO_OVERWRITE=false

export RADAR_BCP_PATH RADAR_BCP_PREVENT_EXECUTE RADAR_BCP_TRUNCATE_LOG
export RADAR_BCP_DROP_INDEXES RADAR_BCP_RECORD_STAMPING RADAR_BCP_AUTO_FLUSH
export RADAR_BCP_OK_TO_OVERWRITE

###########################################################################
#
#  SQL SCRIPTWRITER SETTINGS FOR updates
#
###########################################################################

# setting used to create a ScriptWriter for the MGD database
MGD_SCP_PATH=${MGD_BCP_PATH}
MGD_SCP_PREVENT_EXECUTE=false
MGD_SCP_OK_TO_OVERWRITE=false

# Use default = script
MGD_SCP_FILENAME=updates

# Use defaults
#MGD_SCP_SUFFIX=
#MGD_SCP_OUTFILENAME=
#MGD_SCP_OUTSUFFIX=

export MGD_SCP_PATH MGD_SCP_PREVENT_EXECUTE MGD_SCP_OK_TO_OVERWRITE
#export MGD_SCP_FILENAME MGD_SCP_SUFFIX MGD_SCP_OUTFILENAME MGD_SCP_OUTSUFFIX

###########################################################################
#
#  SQL SCRIPTWRITER SETTINGS FOR Merges and Splits
#
###########################################################################

# setting used to create a ScriptWriter for the merges and split
SCP_PATH=${MGD_BCP_PATH}
SCP_PREVENT_EXECUTE=false
SCP_OK_TO_OVERWRITE=false

# Use default = script
SCP_FILENAME=mergeSplits

# Use defaults
#SCP_SUFFIX=
#SCP_OUTFILENAME=
#SCP_OUTSUFFIX=

export SCP_PATH SCP_PREVENT_EXECUTE SCP_OK_TO_OVERWRITE
#export SCP_FILENAME SCP_SUFFIX SCP_OUTFILENAME SCP_OUTSUFFIX

###########################################################################
#
#  MISCELLANEOUS SETTINGS
#
###########################################################################

#  Recipient list for mailing the log files (comma-separated)
MAIL_LOG_PROC="sc"
MAIL_LOG_CUR=""

export MAIL_LOG_PROC MAIL_LOG_CUR
